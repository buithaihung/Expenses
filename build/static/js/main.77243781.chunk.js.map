{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesGraph.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","titleInputRef","useRef","priceInputRef","useState","enteredTitle","setEnteredTitle","enteredTitleIsValid","trim","enteredTitleTouched","setEnteredTitleTouched","titleInputIsInvalid","enteredPrice","setEnteredPrice","enteredPriceIsValid","enteredPriceTouched","setEnteredPriceTouched","priceInputIsInvalid","enteredAmount","setEnteredAmount","enteredAmountIsValid","enteredAmountTouched","setEnteredAmountTouched","amountInputIsInvalid","enteredDate","setEnteredDate","enteredDateIsValid","enteredDateTouched","setEnteredDateTouched","dateInputIsInvalid","formIsValid","titleInputClasses","priceInputClasses","amountInputClasses","dateInputClasses","onSubmit","event","preventDefault","date","Date","expenseData","title","price","toISOString","split","amount","onSaveExpenseData","className","ref","type","value","onBlur","onChange","target","min","step","max","onClick","onCancel","disabled","NewExpense","isEditing","setIsEditing","enteredExpenseData","onAddExpense","Card","classes","children","ExpensesFilter","total","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","onRemoveExpense","ExpensesList","items","length","addExpenseHandler","expense","onAddExpenseHandler","removeExpenseHandler","onRemoveExpenseHandler","map","bind","id","ExpensesGraph","config","data","width","height","autoFit","xField","yField","color","point","size","shape","label","style","fill","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","setFilteredExpenses","useEffect","filteredArray","filter","toString","totalSpendingOfTheYear","reduce","prev","next","selectedYear","updatedExpenses","existingExpenseIndex","findIndex","existingExpense","updatedExpense","a","fetch","method","body","JSON","stringify","headers","App","setExpenses","isLoading","setIsLoading","httpError","setHttpError","addExpenseTouched","setAddExpenseTouched","response","ok","Error","json","key","responseData","loadedExpenses","push","fetchExpenses","catch","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77243781.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const titleInputRef = useRef();\n  const priceInputRef = useRef();\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const enteredTitleIsValid = enteredTitle.trim() !== \"\";\n  const [enteredTitleTouched, setEnteredTitleTouched] = useState(false);\n  const titleInputIsInvalid = !enteredTitleIsValid && enteredTitleTouched;\n  const [enteredPrice, setEnteredPrice] = useState(\"\");\n  const enteredPriceIsValid = enteredPrice.trim() !== \"\" && +enteredPrice >= 0;\n  const [enteredPriceTouched, setEnteredPriceTouched] = useState(false);\n  const priceInputIsInvalid = !enteredPriceIsValid && enteredPriceTouched;\n  const [enteredAmount, setEnteredAmount] = useState(\"1\");\n  const enteredAmountIsValid =\n    enteredAmount.trim() !== \"\" && +enteredAmount >= 1;\n  const [enteredAmountTouched, setEnteredAmountTouched] = useState(false);\n  const amountInputIsInvalid = !enteredAmountIsValid && enteredAmountTouched;\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const enteredDateIsValid = enteredDate.trim() !== \"\";\n  const [enteredDateTouched, setEnteredDateTouched] = useState(false);\n  const dateInputIsInvalid = !enteredDateIsValid && enteredDateTouched;\n  let formIsValid = false;\n\n  if (\n    enteredTitleIsValid &&\n    enteredPriceIsValid &&\n    enteredAmountIsValid &&\n    enteredDateIsValid\n  ) {\n    formIsValid = true;\n  }\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n  const titleInputBlurHandler = (event) => {\n    setEnteredTitleTouched(true);\n  };\n\n  const priceChangeHandler = (event) => {\n    setEnteredPrice(event.target.value);\n  };\n  const priceInputBlurHandler = (event) => {\n    setEnteredPriceTouched(true);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n  const dateInputBlurHandler = (event) => {\n    setEnteredDateTouched(true);\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n  const amountInputBlurHandler = (event) => {\n    setEnteredAmountTouched(true);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    setEnteredTitleTouched(true);\n    setEnteredPriceTouched(true);\n    if (\n      !enteredTitleIsValid ||\n      !enteredPriceIsValid ||\n      !enteredAmountIsValid ||\n      !enteredDateIsValid\n    ) {\n      return;\n    }\n    const date = new Date(enteredDate);\n    const expenseData = {\n      title: enteredTitle,\n      price: enteredPrice,\n      date: date.toISOString().split(\"T\")[0],\n      amount: enteredAmount,\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredTitleTouched(false);\n    setEnteredPrice(\"\");\n    setEnteredPriceTouched(false);\n    setEnteredAmount(\"\");\n    setEnteredAmountTouched(false);\n    setEnteredDate(\"\");\n    setEnteredDateTouched(false);\n  };\n\n  const titleInputClasses = titleInputIsInvalid\n    ? \"new-expense__control invalid\"\n    : \"new-expense__control\";\n  const priceInputClasses = priceInputIsInvalid\n    ? \"new-expense__control invalid\"\n    : \"new-expense__control\";\n  const amountInputClasses = amountInputIsInvalid\n    ? \"new-expense__control invalid\"\n    : \"new-expense__control\";\n  const dateInputClasses = dateInputIsInvalid\n    ? \"new-expense__control invalid\"\n    : \"new-expense__control\";\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className={titleInputClasses}>\n          <label>Title</label>\n          <input\n            ref={titleInputRef}\n            type=\"text\"\n            value={enteredTitle}\n            onBlur={titleInputBlurHandler}\n            onChange={titleChangeHandler}\n          />\n          {titleInputIsInvalid && (\n            <p className=\"new-expense__error\">Title must not be empty</p>\n          )}\n        </div>\n        <div className={priceInputClasses}>\n          <label>Price</label>\n          <input\n            ref={priceInputRef}\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            max=\"1000000\"\n            onBlur={priceInputBlurHandler}\n            value={enteredPrice}\n            onChange={priceChangeHandler}\n          />\n          {priceInputIsInvalid && (\n            <p className=\"new-expense__error\">Price is invalid</p>\n          )}\n        </div>\n        <div className={dateInputClasses}>\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onBlur={dateInputBlurHandler}\n            onChange={dateChangeHandler}\n          />\n          {dateInputIsInvalid && (\n            <p className=\"new-expense__error\">Date must not be empty</p>\n          )}\n        </div>\n        <div className={amountInputClasses}>\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"1\"\n            max=\"10\"\n            step=\"1\"\n            value={enteredAmount}\n            onBlur={amountInputBlurHandler}\n            onChange={amountChangeHandler}\n          />\n          {amountInputIsInvalid && (\n            <p className=\"new-expense__error\">Amount is invalid</p>\n          )}\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button disabled={!formIsValid} type=\"submit\">\n          Add Expense\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>total: ${props.total}</label>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        \n        <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.price}</div>  \n          <div className=\"actions\">\n            <button onClick={props.onAddExpense}>+</button>\n            <div className=\"expense-item__name\">{props.amount}</div>  \n            <button onClick={props.onRemoveExpense}>−</button>\n          </div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n  const addExpenseHandler = (expense) => {\n    props.onAddExpenseHandler(expense);\n  }\n  const removeExpenseHandler = (expense) => {\n    props.onRemoveExpenseHandler(expense);\n  }\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          onAddExpense={addExpenseHandler.bind(null,expense)}\n          onRemoveExpense={removeExpenseHandler.bind(null,expense)}\n          title={expense.title}\n          price={expense.price}\n          date={expense.date}\n          amount={expense.amount}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\n\r\nconst ExpensesGraph = (props) => {\r\n  const data = props.data;\r\n  const config = {\r\n    data,\r\n    width: 800,\r\n    height: 400,\r\n    autoFit: true,\r\n    xField: \"label\",\r\n    yField: \"value\",\r\n    color: \"#666362\",\r\n    point: {\r\n      size: 5,\r\n      shape: \"circle\",\r\n      color: \"#aaa\"\r\n    },\r\n    label: {\r\n      style: {\r\n        fill: \"black\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Line {...config} />\r\n    </div>\r\n  );\r\n};\r\nexport default ExpensesGraph;\r\n","import React from \"react\";\nimport ExpensesGraph from \"./ExpensesGraph\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += +expense.price * +expense.amount;\n  }\n  return (\n    <div>\n      <ExpensesGraph data={chartDataPoints} />\n      <br/>\n    </div>\n  );\n};\n\nexport default ExpensesChart;\n","import React, { useState, useEffect } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n  const [filteredExpenses, setFilteredExpenses] = useState([]);\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n  useEffect(() => {\n    const filteredArray = props.items.filter((expense) => {\n      return expense.date.getFullYear().toString() === filteredYear;\n    });\n    setFilteredExpenses(filteredArray);\n  }, [setFilteredExpenses, filteredYear, props.items]);\n\n  const totalSpendingOfTheYear = filteredExpenses.length\n    ? filteredExpenses\n        .map((expense) => +expense.price * +expense.amount)\n        .reduce((prev, next) => prev + next)\n    : 0;\n  const onAdd = (expenseData) => {\n    const existingExpenseIndex = filteredExpenses.findIndex(\n      (expense) => expense.id === expenseData.id\n    );\n    const existingExpense = filteredExpenses[existingExpenseIndex];\n    let updatedExpenses;\n    if (existingExpense) {\n      const updatedExpense = {\n        ...existingExpense,\n        amount: +existingExpense.amount + 1,\n      };\n      updatedExpenses = [...filteredExpenses];\n      updatedExpenses[existingExpenseIndex] = updatedExpense;\n      setFilteredExpenses(updatedExpenses);\n      const onAddExpense = async () => {\n        await fetch(`https://expense-2f75d-default-rtdb.firebaseio.com/expenses/${updatedExpense.id}.json`,{\n          method: \"PATCH\",\n          body: JSON.stringify(updatedExpense),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          \n        });\n      }\n      onAddExpense();\n    }\n  };\n  const onRemove = (expenseData) => {\n    const existingExpenseIndex = filteredExpenses.findIndex(\n      (expense) => expense.id === expenseData.id\n    );\n    const existingExpense = filteredExpenses[existingExpenseIndex];\n    let updatedExpenses;\n    if (+existingExpense.amount === 1) {\n      updatedExpenses = filteredExpenses.filter(\n        (expense) => expense.id !== expenseData.id\n      );\n      setFilteredExpenses(updatedExpenses);\n      const onRemoveExpense = async () => {\n        await fetch(`https://expense-2f75d-default-rtdb.firebaseio.com/expenses/${expenseData.id}.json`,{\n          method: \"DELETE\",\n          body: JSON.stringify(existingExpense),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          \n        });\n      }\n      onRemoveExpense();\n    } else {\n      const updatedExpense = {\n        ...existingExpense,\n        amount: +existingExpense.amount - 1,\n      };\n      updatedExpenses = [...filteredExpenses];\n      updatedExpenses[existingExpenseIndex] = updatedExpense;\n      setFilteredExpenses(updatedExpenses);\n      const onAddExpense = async () => {\n        await fetch(`https://expense-2f75d-default-rtdb.firebaseio.com/expenses/${updatedExpense.id}.json`,{\n          method: \"PATCH\",\n          body: JSON.stringify(updatedExpense),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          \n        });\n      }\n      onAddExpense();\n\n\n    }\n  };\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          total={totalSpendingOfTheYear}\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList\n          onAddExpenseHandler={onAdd}\n          onRemoveExpenseHandler={onRemove}\n          items={filteredExpenses}\n        />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState, useEffect } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\nconst App = () => {\n  const [expenses, setExpenses] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  const [addExpenseTouched, setAddExpenseTouched] = useState(false);\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      const response = await fetch(\n        \"https://expense-2f75d-default-rtdb.firebaseio.com/expenses.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n      const responseData = await response.json();\n      const loadedExpenses = [];\n      for (const key in responseData) {\n        loadedExpenses.push({\n          id: key,\n          title: responseData[key].title,\n          price: responseData[key].price,\n          amount: responseData[key].amount,\n          date: new Date(responseData[key].date),\n        });\n      }\n      setExpenses(loadedExpenses);\n      setIsLoading(false);\n    };\n    fetchExpenses().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error);\n    });\n  }, [addExpenseTouched]);\n  console.log(expenses);\n  const addExpenseHandler = async (expense) => {\n    setAddExpenseTouched(true);\n    await fetch(\n      \"https://expense-2f75d-default-rtdb.firebaseio.com/expenses.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(expense),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    setAddExpenseTouched(false);\n  };\n\n  if (isLoading) {\n    return (\n      <section className=\"ExpensesLoading\">\n        <p>Loading...</p>\n      </section>\n    );\n  }\n  if (httpError) {\n    return (\n      <section className=\"ExpensesError\">\n        <p>{httpError}</p>\n      </section>\n    );\n  }\n  return (\n    <div>\n      <p>Expenses</p>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}